{"version":3,"file":"static/js/876.d1300d97.chunk.js","mappings":"gOAEaA,EAAYC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0D,oBCCtBC,EAAc,SAAAC,GAAK,OAAIA,EAAMC,SAASA,SAASC,KAAM,EACrDC,EAAY,SAAAH,GAAK,OAAIA,EAAMI,OAAOA,MAAO,ECFzCC,EAAQT,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uE,SCCjBQ,EAAS,SAAHC,GAAoB,IAAfC,EAAQD,EAARC,SACpB,OAAOC,EAAAA,EAAAA,KAACJ,EAAK,CAAAG,SAAEA,GACnB,ECHaE,EAAYd,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0DA8CpBa,GAxCKf,EAAAA,GAAAA,KAAWgB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,8QAeVF,EAAAA,GAAAA,MAAYiB,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,sRAcRF,EAAAA,GAAAA,OAAakB,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,mLAWfF,EAAAA,GAAAA,MAAYmB,IAAAA,GAAAjB,EAAAA,EAAAA,GAAA,iC,+EC9CtBkB,GAAWC,EAAAA,EAAAA,GAAW,CACjCC,EAAG,sQCDQC,GAAYF,EAAAA,EAAAA,GAAW,CAClCC,EAAG,s3BACHE,YAAa,YACbC,QAAS,cCHEC,GAAmBL,EAAAA,EAAAA,GAAW,CACzCC,EAAG,4DACHE,YAAa,qBCyEf,EAnEoB,WAClB,IAAMG,GAAWC,EAAAA,EAAAA,MACXvB,GAAWwB,EAAAA,EAAAA,IAAY1B,GAoB7B,OACEU,EAAAA,EAAAA,KAACC,EAAS,CAAAF,UACRkB,EAAAA,EAAAA,MAAA,QAAMC,SApBW,SAAAC,GACnBA,EAAMC,iBACN,IAAMC,EAAOF,EAAMG,OACbC,EAAOF,EAAKE,KAAKC,MACjBC,EAASJ,EAAKI,OAAOD,MACrBE,EAAU,CAAEH,KAAMA,EAAME,OAAQA,GAE1B,OAARjC,QAAQ,IAARA,GAAAA,EAAUmC,MAAK,SAAAD,GAAO,OAAIA,EAAQH,OAASA,CAAI,IACjDK,IAAAA,OAAAA,QAAwB,GAADC,OAAIN,EAAI,kCAI/BT,GAASgB,EAAAA,EAAAA,IAAeJ,IAG1BP,EAAMG,OAAOS,QACf,EAIiChC,SAAA,EAC3BkB,EAAAA,EAAAA,MAACf,EAAK,CAAAH,SAAA,CAAC,QAELkB,EAAAA,EAAAA,MAACe,EAAAA,EAAU,CAAAjC,SAAA,EACTC,EAAAA,EAAAA,KAACiC,EAAAA,EAAgB,CAACC,cAAc,OAAMnC,UACpCC,EAAAA,EAAAA,KAACO,EAAQ,CAAC4B,MAAM,gBAEpBnC,EAAAA,EAAAA,KAACoC,EAAAA,EAAK,CAACC,GAAI,GACTC,KAAK,KACLC,QAAQ,SACRC,YAAY,oBACZC,KAAK,OACLlB,KAAK,OACLmB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,WAIZ3B,EAAAA,EAAAA,MAACf,EAAK,CAAAH,SAAA,CAAC,UAELkB,EAAAA,EAAAA,MAACe,EAAAA,EAAU,CAAAjC,SAAA,EACTC,EAAAA,EAAAA,KAACiC,EAAAA,EAAgB,CAACC,cAAc,OAAMnC,UACpCC,EAAAA,EAAAA,KAACU,EAAS,CAACyB,MAAM,gBAEnBnC,EAAAA,EAAAA,KAACoC,EAAAA,EAAK,CAACC,GAAI,GACTC,KAAK,KACLC,QAAQ,SACRC,YAAY,sBACZC,KAAK,MACLlB,KAAK,SACLmB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,WAId5C,EAAAA,EAAAA,KAAC6C,EAAAA,EAAM,CAAEC,YAAY,QAAQC,WAAW/C,EAAAA,EAAAA,KAACa,EAAgB,IAAK4B,KAAK,SAAQ1C,SAAC,oBAIpF,E,8EC5DaiD,GAAMC,EAAAA,EAAAA,GAAO,OAE1BD,EAAIrC,YAAc,MAqBX,IAAMuC,GAASC,EAAAA,EAAAA,IAA+B,SACnDC,EACAC,GAEA,IAAQf,EAAwCc,EAAxCd,KAAAgB,EAAwCF,EAAlCG,cAAAA,OAAA,IAAAD,GAAgBA,EAASE,GAAAC,EAAAA,EAAAA,GAASL,EAAAM,GAE1CC,EAA4BJ,EAC9B,CAAEK,QAAS,OAAQC,WAAY,SAAUC,eAAgB,UACzD,CAAC,EAEL,OACEC,EAAAA,EAAAA,KAACf,GAAAgB,EAAAA,EAAAA,GAAA,CACCX,IAAAA,EACAY,QAAS3B,EACT4B,OAAAF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKL,GAAA,IACHQ,WAAY,EACZC,SAAU,KAERZ,GAGV,IAEAN,EAAOvC,YAAc,UAECwC,EAAAA,EAAAA,IAA+B,SACnDC,EACAC,GAEA,IAAQf,EAAkBc,EAAlBd,KAASkB,GAAAC,EAAAA,EAAAA,GAASL,EAAAiB,GAC1B,OAAON,EAAAA,EAAAA,KAACb,GAAAc,EAAAA,EAAAA,GAAA,CAAO1B,KAAAA,EAAYe,IAAAA,EAAUiB,aAAa,UAAad,GACjE,IAEO7C,YAAc,S,oBChCrB,EAhCe,WACb,IAAMG,GAAWC,EAAAA,EAAAA,MAEXvB,GAAWwB,EAAAA,EAAAA,IAAY1B,GAQ7B,OAAQU,EAAAA,EAAAA,KAAAuE,EAAAA,SAAA,CAAAxE,SACLP,EAASgF,OAAS,GAEjBvD,EAAAA,EAAAA,MAAC+B,EAAG,CAACX,GAAI,GAAIoC,GAAI,GAAG1E,SAAA,EACpBC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,2BACHC,EAAAA,EAAAA,KAACoC,EAAAA,EAAK,CACJK,KAAK,OACLlB,KAAK,SACLiB,YAAY,aACZkC,SAfW,SAACC,GAEhB7D,GAAS8D,EAAAA,EAAAA,GAAUD,EAAErD,OAAOE,OAC9B,QAgBIxB,EAAAA,EAAAA,KAAA,KAAAD,SAAG,mCAMT,ECnBa8E,GAjBO1F,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wIAWFF,EAAAA,GAAAA,GAASgB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,kDAMhBF,EAAAA,GAAAA,KAAWiB,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,oD,4JCH/ByF,IAA4CC,EAAAA,EAAAA,GAE1C,CACAxD,KAAA,oBACAyD,aAAA,oGACDC,IAAAC,EAAAA,EAAAA,GAAAJ,GAAA,GALMK,GAAAF,GAAA,GAAoBG,GAAaH,GAAA,GAqC3BI,IAAOlC,EAAAA,EAAAA,IAA4B,SAAcC,EAAOC,GACnE,IAAMM,GAAS2B,EAAAA,GAAAA,IAAoB,OAAQlC,GAC3CmC,GAMIC,EAAAA,GAAAA,IAAiBpC,GALnBrD,EAAAwF,EAAAxF,SAAA0F,EAAAF,EACAG,UAAAA,OAAA,IAAAD,EAAY,OAAAA,EACZE,EAAAJ,EAAAI,cACAC,EAAAL,EAAAK,QACGpC,GAAAC,EAAAA,EAAAA,GAAA8B,EAAA7B,IAGCmC,GAAgBC,EAAAA,EAAAA,GAAiB/F,GAIjCgG,EAAeH,GAAAI,EAAAA,EAAAA,GAAA,GAFJ,kCAE4B,CAAEvB,GAAImB,IAAc,CAAC,EAElE,OACE7B,EAAAA,EAAAA,KAACoB,GAAA,CAAmB3D,MAAOmC,EACzB5D,UAAAgE,EAAAA,EAAAA,KAACd,EAAAA,EAAAA,IAAOe,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACNX,IAAAA,EACA4C,cAAeP,EACfQ,kBAAmBP,EAKnBQ,KAAK,OACLjC,OAAAF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAYL,EAAOyC,WAAcL,IAC7BvC,GAAA,IAEHzD,SAAA8F,MAIT,IAEAR,GAAK1E,YAAc,QAEQwC,EAAAA,EAAAA,IAA4B,SAACC,EAAOC,GACrCD,EAAhBiD,GAAR,IAAe7C,GAAAC,EAAAA,EAAAA,GAASL,EAAAiB,IACxB,OACEN,EAAAA,EAAAA,KAACsB,IAAArB,EAAAA,EAAAA,GAAA,CAAKX,IAAAA,EAAUgD,GAAG,KAAKX,UAAU,UAAUY,YAAY,OAAU9C,GAEtE,IAEY7C,YAAc,eAEGwC,EAAAA,EAAAA,IAA4B,SACvDC,EACAC,GAEwBD,EAAhBiD,GAAR,IAAe7C,GAAAC,EAAAA,EAAAA,GAASL,EAAAmD,IACxB,OACExC,EAAAA,EAAAA,KAACsB,IAAArB,EAAAA,EAAAA,GAAA,CAAKX,IAAAA,EAAUgD,GAAG,KAAKX,UAAU,UAAUY,YAAY,OAAU9C,GAEtE,IAEc7C,YAAc,gBASrB,IAAM6F,IAAWrD,EAAAA,EAAAA,IAAgC,SACtDC,EACAC,GAEA,IAAMM,EAASyB,KAEf,OAAOrB,EAAAA,EAAAA,KAACd,EAAAA,EAAAA,IAAOe,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAAGX,IAAAA,GAAcD,GAAA,IAAOc,MAAOP,EAAO8C,OACvD,IAEAD,GAAS7F,YAAc,YAOCwC,EAAAA,EAAAA,IAA6B,SACnDC,EACAC,GAEA,IAAMM,EAASyB,KAEf,OAAOrB,EAAAA,EAAAA,KAAC2C,EAAAA,GAAA1C,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAAKX,IAAAA,EAAU8C,KAAK,gBAAmB/C,GAAA,IAAOc,MAAOP,EAAOgD,OACtE,IAEShG,YAAc,WClIvB,IA6BA,GA7BoB,WAClB,IAAAiG,GAA6B5F,EAAAA,EAAAA,KAAY,SAAAzB,GAAK,OAAEA,EAAMC,SAASA,QAAQ,IAA9DqH,EAAKD,EAALC,MAAOC,EAASF,EAATE,UACXtH,GAAWwB,EAAAA,EAAAA,IAAY1B,GACtBK,GAASqB,EAAAA,EAAAA,IAAYtB,GACrBoB,GAAWC,EAAAA,EAAAA,MAIbgG,EAA0B,OAARvH,QAAQ,IAARA,OAAQ,EAARA,EAAUG,QAAO,SAAA+B,GAAO,OAC9CA,EAAQH,KAAKyF,cAAcC,SAAStH,EAAOqH,cAAc,IAGzD,OAAQ/F,EAAAA,EAAAA,MAAAsD,EAAAA,SAAA,CAAAxE,SAAA,CACP+G,IAAa9G,EAAAA,EAAAA,KAACkH,EAAAA,EAAM,KACnBlH,EAAAA,EAAAA,KAACqF,GAAI,CAACO,QAAS,EAAE7F,SACdgH,EAAgBI,KAAI,SAAArH,GAAA,IAAEsH,EAAEtH,EAAFsH,GAAI7F,EAAIzB,EAAJyB,KAAM8F,EAAKvH,EAALuH,MAAK,OACpCpG,EAAAA,EAAAA,MAACuF,GAAQ,CAAAzG,SAAA,EACPC,EAAAA,EAAAA,KAAC0G,EAAAA,EAAI,CAACL,GAAI3F,EAAWuD,QAAS,KAC9BhD,EAAAA,EAAAA,MAAC4D,EAAI,CAAA9E,SAAA,CAAEwB,EAAK,KAAG8F,MACfrH,EAAAA,EAAAA,KAAC6C,EAAAA,EAAM,CAACC,YAAY,MAAML,KAAK,SAAS6E,QAAS,WAAKxG,GAASyG,EAAAA,EAAAA,IAAeH,GAAI,EAAErH,SAAC,aAHxEqH,EAIJ,MAGdP,IAAS7G,EAAAA,EAAAA,KAAA,KAAAD,SAAI8G,MAIlB,EC5Be,SAASW,KACtB,IAAM1G,GAAWC,EAAAA,EAAAA,MACbvB,GAAWwB,EAAAA,EAAAA,IAAY1B,GAQ3B,OAPEmI,QAAQC,IAAIlI,IAEhBmI,EAAAA,EAAAA,YAAU,WACP7G,GAAS8G,EAAAA,EAAAA,MAEZ,GAAG,CAAC9G,KAIAG,EAAAA,EAAAA,MAAC/B,EAAS,CAAAa,SAAA,EACRC,EAAAA,EAAAA,KAACH,EAAM,CAAAE,SAAC,eACRC,EAAAA,EAAAA,KAAC6H,EAAW,KAEZ7H,EAAAA,EAAAA,KAACH,EAAM,CAAAE,SAAC,cAENC,EAAAA,EAAAA,KAAC8H,EAAM,KAEX9H,EAAAA,EAAAA,KAAC+H,GAAW,MAIhB,C,iNCxBMC,GAAqB/E,EAAAA,EAAAA,GAAO,MAAO,CACvCgF,UAAW,CACTrE,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBoE,SAAU,WACVC,IAAK,IACLC,OAAQ,KAINC,GAAelF,EAAAA,EAAAA,IAAqC,SACxDC,EACAC,GACA,IAAAiF,EA3BFC,EAAAC,EA4BEC,EAAwCrF,EAAhCsF,UAAAA,OAAA,IAAAD,EAAY,OAAAA,EAAWjF,GAAAC,EAAAA,EAAAA,GAASL,EAAAM,GAElCC,GAASgF,EAAAA,EAAAA,KACTC,EAAajF,EAAOkF,MAEpBC,EAAqB,SAAdJ,EAAuB,aAAe,WAE7CK,GAAA/E,EAAAA,EAAAA,IAAAsE,EAAA,IAAAtC,EAAAA,EAAAA,GAAAsC,EACHQ,EAAO,MAAA9C,EAAAA,EAAAA,GAAAsC,EAAA,QACD,OAAAC,EAAA,MAAAK,OAAA,EAAAA,EAAOI,QAAPT,EAAiB,MAAAK,OAAA,EAAAA,EAAOK,IAAAjD,EAAAA,EAAAA,GAAAsC,EAAA,SACvB,OAAAE,EAAA,MAAAI,OAAA,EAAAA,EAAOI,QAAPR,EAAiB,MAAAI,OAAA,EAAAA,EAAOK,IAAAjD,EAAAA,EAAAA,GAAAsC,EAAA,WACtB,MAAAM,OAAA,EAAAA,EAAOM,UAAAZ,GACd3E,EAAOwF,SAGZ,OAAOpF,EAAAA,EAAAA,KAACiE,GAAAhE,EAAAA,EAAAA,GAAA,CAAmBX,IAAAA,EAAUa,MAAO6E,GAAmBvF,GACjE,IAGA6E,EAAajB,GAAK,eAElBiB,EAAa1H,YAAc,eAIpB,IAAMsB,GAAmBkB,EAAAA,EAAAA,IAC9B,SAA0BC,EAAOC,GAC/B,IAAQ+F,EAAuBhG,EAAvBgG,UAAc5F,GAAAC,EAAAA,EAAAA,GAASL,EAAAiB,GACzBgF,GAAaC,EAAAA,EAAAA,IAAG,6BAA8BF,GAEpD,OACErF,EAAAA,EAAAA,KAACsE,GAAArE,EAAAA,EAAAA,GAAA,CACCX,IAAAA,EACAqF,UAAU,OACVU,UAAWC,GACP7F,GAGV,IAIFvB,EAAiBmF,GAAK,mBAEtBnF,EAAiBtB,YAAc,mBAIxB,IAAM4I,GAAoBpG,EAAAA,EAAAA,IAC/B,SAA2BC,EAAOC,GAChC,IAAQ+F,EAAuBhG,EAAvBgG,UAAc5F,GAAAC,EAAAA,EAAAA,GAASL,EAAAmD,GACzB8C,GAAaC,EAAAA,EAAAA,IAAG,8BAA+BF,GAErD,OACErF,EAAAA,EAAAA,KAACsE,GAAArE,EAAAA,EAAAA,GAAA,CACCX,IAAAA,EACAqF,UAAU,QACVU,UAAWC,GACP7F,GAGV,IAIF+F,EAAkBnC,GAAK,oBAEvBmC,EAAkB5I,YAAc,mB,wOChFhCmE,GAAwDC,EAAAA,EAAAA,GAEtD,CACAxD,KAAA,0BACAyD,aAAA,gHACDC,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GALM0E,EAAAvE,EAAA,GAA0B0D,EAAmB1D,EAAA,GAavCjD,GAAamB,EAAAA,EAAAA,IACxB,SAAoBC,EAAOC,GACzB,IAAMM,GAAS2B,EAAAA,EAAAA,IAAoB,QAASlC,GAC5CmC,GAAyCC,EAAAA,EAAAA,IAAiBpC,GAAlDrD,EAAAwF,EAAAxF,SAAUqJ,EAAA7D,EAAA6D,UAAc5F,GAAAC,EAAAA,EAAAA,GAAA8B,EAAA7B,GAE1B2F,GAAaC,EAAAA,EAAAA,IAAG,sBAAuBF,GACvCK,EAA+B,CAAC,EAEhC5D,GAAgBC,EAAAA,EAAAA,GAAiB/F,GAEjC6I,EAAajF,EAAOkF,MAE1BhD,EAAc6D,SAAQ,SAACC,GAxC3B,IAAApB,EAAAC,EAyCW7E,IAEDiF,GAA2B,qBAAlBe,EAAMlH,KAAK2E,KACtBqC,EAAYG,aAAe,OAAArB,EAAAK,EAAMI,QAANT,EAAgBK,EAAMK,GAG/CL,GAA2B,sBAAlBe,EAAMlH,KAAK2E,KACtBqC,EAAYI,WAAa,OAAArB,EAAAI,EAAMI,QAANR,EAAgBI,EAAMK,GAG3B,oBAAlBU,EAAMlH,KAAK2E,KACbqC,EAAYK,gBAAkB,GAGV,mBAAlBH,EAAMlH,KAAK2E,KACbqC,EAAYM,kBAAoB,GAEpC,IAEA,IAAMC,EAASnE,EAAcsB,KAAI,SAACwC,GA5DtC,IAAApB,EAAAC,EAiEYyB,EChEZ,SAAiBC,GACf,IAAMC,EAAQC,OAAOC,OAAO,CAAC,EAAGH,GAChC,IAAK,IAAII,KAAOH,OACK,IAAfA,EAAMG,WACDH,EAAMG,GAEjB,OAAOH,CACT,CDyDsBI,CAAQ,CACtBjI,MAAM,OAAAiG,EAAAoB,EAAMvG,YAAN,EAAAmF,EAAajG,OAAQc,EAAMd,KACjCC,SAAS,OAAAiG,EAAAmB,EAAMvG,YAAN,EAAAoF,EAAajG,UAAWa,EAAMb,UAGzC,MAAyB,UAAlBoH,EAAMlH,KAAK2E,IACdoD,EAAAA,EAAAA,cAAab,EAAOM,IACpBO,EAAAA,EAAAA,cAAab,EAAOS,OAAOC,OAAOJ,EAASR,EAAaE,EAAMvG,OACpE,IAEA,OACEW,EAAAA,EAAAA,KAACd,EAAAA,EAAAA,KAAOe,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACNoF,UAAWC,EACXhG,IAAAA,EACAa,OAAAF,EAAAA,EAAAA,GAAA,CACEyG,MAAO,OACP7G,QAAS,OACTsE,SAAU,WAGVwC,UAAW,WACR/G,EAAOgH,OAEZ,cAAU,GACNnH,GAAA,IAEJzD,UAAAgE,EAAAA,EAAAA,KAACyF,EAAA,CAAyBhI,MAAOmC,EAC9B5D,SAAAiK,MAIT,IAGFhI,EAAWrB,YAAc,Y,qEEjGzB,SAASmF,EAAiB/F,GACxB,OAAO6K,EAAAA,SAAAA,QAAiB7K,GAAUJ,QAChC,SAACgK,GAAK,OAAKkB,EAAAA,EAAAA,gBAAelB,EAAM,GAEpC,C","sources":["pages/Contacts/Contacts.styled.jsx","redux/contacts/selectors.js","components/Title/Title.styled.jsx","components/Title/Title.jsx","components/ContactForm/ContactForm.styled.jsx","../node_modules/@chakra-ui/icons/src/Info.tsx","../node_modules/@chakra-ui/icons/src/Phone.tsx","../node_modules/@chakra-ui/icons/src/ArrowForward.tsx","components/ContactForm/ContactForm.jsx","../node_modules/@chakra-ui/layout/src/box.tsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.jsx","../node_modules/@chakra-ui/layout/src/list.tsx","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.js","../node_modules/@chakra-ui/input/src/input-element.tsx","../node_modules/@chakra-ui/input/src/input-group.tsx","../node_modules/@chakra-ui/object-utils/dist/chunk-R3DH46PF.mjs","../node_modules/@chakra-ui/react-children-utils/dist/index.mjs"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\nwidth: 400px;\npadding: 10px;\nmargin: 0 auto;\n`","\n\n\nexport const getContacts = state => state.contacts.contacts.items;\nexport const getFilter = state => state.filter.filter;\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\nfont-size: 1.5em;\ntext-align: center;\nmargin-top: 70px;\n\n`","import { Title } from \"./Title.styled\"\n\n\nexport const Titles = ({children}) => {\n    return <Title>{children}</Title>\n}","import styled from 'styled-components';\n\nexport const Conteiner = styled.div`\nwidth: 400px;\npadding: 10px;\nmargin: 0 auto;\n`\n\nexport const Form = styled.form`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nwidth: 300px;\npadding: 20px 30px;\npadding-bottom: 25px;\nborder-radius: 5px;\nmargin-bottom: 35px;\nbox-shadow: 0 15px 25px rgba(0, 0, 0, 0.6);\nborder-radius: 10px;\nbackground-color: white;\n\n`\n\nexport const Input = styled.input`\nbox-shadow: 0 0 5px rgba(0, 0, 0, 0.1);\nborder: 1px solid #ccc;\npadding: 10px;\n  font-size: 16px;\n  border-radius: 5px;\n  background-color: #f2f2f2;\n  margin-bottom:15px;\n  margin-left:10px;\n  color: #333;\n  &:focus {\n    border-bottom: 2px solid #4CAF50;}\n`\n\nexport const ButtonAdd = styled.button`\npadding: 10px 20px;\n  background-color: #4CAF50;\n  color: #fff;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n\n&:hover {\n  background-color: #45a049;}`\n\n  export const Label = styled.label`\nmargin-bottom: 30px;\n`","import { createIcon } from \"@chakra-ui/icon\"\n\nexport const InfoIcon = createIcon({\n  d: \"M12,0A12,12,0,1,0,24,12,12.013,12.013,0,0,0,12,0Zm.25,5a1.5,1.5,0,1,1-1.5,1.5A1.5,1.5,0,0,1,12.25,5ZM14.5,18.5h-4a1,1,0,0,1,0-2h.75a.25.25,0,0,0,.25-.25v-4.5a.25.25,0,0,0-.25-.25H10.5a1,1,0,0,1,0-2h1a2,2,0,0,1,2,2v4.75a.25.25,0,0,0,.25.25h.75a1,1,0,1,1,0,2Z\",\n})\n","import { createIcon } from \"@chakra-ui/icon\"\n\nexport const PhoneIcon = createIcon({\n  d: \"M2.20731,0.0127209 C2.1105,-0.0066419 1.99432,-0.00664663 1.91687,0.032079 C0.871279,0.438698 0.212942,1.92964 0.0580392,2.95587 C-0.426031,6.28627 2.20731,9.17133 4.62766,11.0689 C6.77694,12.7534 10.9012,15.5223 13.3409,12.8503 C13.6507,12.5211 14.0186,12.037 13.9993,11.553 C13.9412,10.7397 13.186,10.1588 12.6051,9.71349 C12.1598,9.38432 11.2304,8.47427 10.6495,8.49363 C10.1267,8.51299 9.79754,9.05515 9.46837,9.38432 L8.88748,9.96521 C8.79067,10.062 7.55145,9.24878 7.41591,9.15197 C6.91248,8.8228 6.4284,8.45491 6.00242,8.04829 C5.57644,7.64167 5.18919,7.19632 4.86002,6.73161 C4.7632,6.59607 3.96933,5.41495 4.04678,5.31813 C4.04678,5.31813 4.72448,4.58234 4.91811,4.2919 C5.32473,3.67229 5.63453,3.18822 5.16982,2.45243 C4.99556,2.18135 4.78257,1.96836 4.55021,1.73601 C4.14359,1.34875 3.73698,0.942131 3.27227,0.612963 C3.02055,0.419335 2.59457,0.0708094 2.20731,0.0127209 Z\",\n  displayName: \"PhoneIcon\",\n  viewBox: \"0 0 14 14\",\n})\n","import { createIcon } from \"@chakra-ui/icon\"\n\nexport const ArrowForwardIcon = createIcon({\n  d: \"M12 4l-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8z\",\n  displayName: \"ArrowForwardIcon\",\n})\n","import React from 'react';\nimport {  Conteiner, Label } from './ContactForm.styled';\nimport { getContacts } from 'redux/contacts/selectors';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Notiflix from 'notiflix';\nimport { createContacts } from 'redux/contacts/operations';\nimport { Button, Input, InputGroup, InputLeftElement } from '@chakra-ui/react';\nimport { ArrowForwardIcon, InfoIcon, PhoneIcon } from '@chakra-ui/icons';\n\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const handelSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n    const name = form.name.value;\n    const number = form.number.value;\n    const contact = { name: name, number: number };\n\n    if (contacts?.find(contact => contact.name === name)) {\n      Notiflix.Notify.failure(`${name} is already in your contacts`);\n\n      return;\n    } else {\n      dispatch(createContacts(contact));\n    }\n\n    event.target.reset();\n  };\n\n  return (\n    <Conteiner>\n      <form onSubmit={handelSubmit}>\n        <Label>\n          Name\n          <InputGroup>\n            <InputLeftElement pointerEvents=\"none\">\n              <InfoIcon color=\"gray.300\" />\n            </InputLeftElement>\n          <Input mb={30}\n            size=\"lg\"\n            variant=\"filled\"\n            placeholder=\"Please enter name\"\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            />\n            </InputGroup>\n        </Label>\n        <Label>\n          Number\n          <InputGroup>\n            <InputLeftElement pointerEvents=\"none\">\n              <PhoneIcon color=\"gray.300\" />\n            </InputLeftElement>\n            <Input mb={30}\n              size=\"lg\"\n              variant=\"filled\"\n              placeholder=\"Please enter number\"\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n          </InputGroup>\n        </Label>\n        <Button  colorScheme='green' rightIcon={<ArrowForwardIcon />} type=\"submit\">Add Contact</Button>\n      </form>\n    </Conteiner>\n  );\n};\n\nexport default ContactForm;\n","import {\n  chakra,\n  forwardRef,\n  SystemStyleObject,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\n\nexport interface BoxProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * Box is the most abstract component on top of which other chakra\n * components are built. It renders a `div` element by default.\n *\n * @see Docs https://chakra-ui.com/box\n */\nexport const Box = chakra(\"div\")\n\nBox.displayName = \"Box\"\n\n/**\n * As a constraint, you can't pass size related props\n * Only `size` would be allowed\n */\ntype Omitted = \"size\" | \"boxSize\" | \"width\" | \"height\" | \"w\" | \"h\"\n\nexport interface SquareProps extends Omit<BoxProps, Omitted> {\n  /**\n   * The size (width and height) of the square\n   */\n  size?: BoxProps[\"width\"]\n  /**\n   * If `true`, the content will be centered in the square\n   *\n   * @default false\n   */\n  centerContent?: boolean\n}\n\nexport const Square = forwardRef<SquareProps, \"div\">(function Square(\n  props,\n  ref,\n) {\n  const { size, centerContent = true, ...rest } = props\n\n  const styles: SystemStyleObject = centerContent\n    ? { display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }\n    : {}\n\n  return (\n    <Box\n      ref={ref}\n      boxSize={size}\n      __css={{\n        ...styles,\n        flexShrink: 0,\n        flexGrow: 0,\n      }}\n      {...rest}\n    />\n  )\n})\n\nSquare.displayName = \"Square\"\n\nexport const Circle = forwardRef<SquareProps, \"div\">(function Circle(\n  props,\n  ref,\n) {\n  const { size, ...rest } = props\n  return <Square size={size} ref={ref} borderRadius=\"9999px\" {...rest} />\n})\n\nCircle.displayName = \"Circle\"\n","import { Input,  Box } from \"@chakra-ui/react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { setFilter } from \"redux/contacts/filterSlice\";\nimport { getContacts } from \"redux/contacts/selectors\";\n\n\n\nconst Filter = () => {\n  const dispatch = useDispatch()\n  \n  const contacts = useSelector(getContacts)\n \n  const onChange = (e) => {\n  \n    dispatch(setFilter(e.target.value))\n  }\n\n\n  return (<>\n    {contacts.length > 0 ?\n     (\n      <Box mb={30} mt={30}> \n      <p>Find contacts by name</p>\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Enter name\"\n        onChange={onChange}\n      />\n    </Box>\n    ) : ( \n      <p>Please add your first contact</p>)\n     }\n    \n  \n    </>\n  );\n};\n\nexport default Filter;","import styled from 'styled-components';\n\nexport const List = styled.ul`\npadding: 0;\n  margin: 0;\n  list-style-type: none;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  \n`\n\n\nexport const ContactItem = styled.li`\nmargin-top:20px;\npadding-left:20px;\n\n`\n\nexport const Span = styled.span`\nmargin-left: 20px;\nmargin-right: 20px;\n`","import { Icon, IconProps } from \"@chakra-ui/icon\"\nimport { createContext } from \"@chakra-ui/react-context\"\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\"\nimport type {\n  HTMLChakraProps,\n  SystemProps,\n  ThemingProps,\n} from \"@chakra-ui/system\"\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  SystemStyleObject,\n  useMultiStyleConfig,\n} from \"@chakra-ui/system\"\n\nconst [ListStylesProvider, useListStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `ListStylesContext`,\n  errorMessage: `useListStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<List />\" `,\n})\n\nexport { useListStyles }\n\ninterface ListOptions {\n  /**\n   * Shorthand prop for `listStyleType`\n   * @type SystemProps[\"listStyleType\"]\n   */\n  styleType?: SystemProps[\"listStyleType\"]\n  /**\n   * Shorthand prop for `listStylePosition`\n   * @type SystemProps[\"listStylePosition\"]\n   */\n  stylePosition?: SystemProps[\"listStylePosition\"]\n  /**\n   * The space between each list item\n   * @type SystemProps[\"margin\"]\n   */\n  spacing?: SystemProps[\"margin\"]\n}\n\nexport interface ListProps\n  extends HTMLChakraProps<\"ul\">,\n    ThemingProps<\"List\">,\n    ListOptions {}\n\n/**\n * List is used to display list items, it renders a `<ul>` by default.\n *\n * @see Docs https://chakra-ui.com/list\n */\nexport const List = forwardRef<ListProps, \"ul\">(function List(props, ref) {\n  const styles = useMultiStyleConfig(\"List\", props)\n  const {\n    children,\n    styleType = \"none\",\n    stylePosition,\n    spacing,\n    ...rest\n  } = omitThemingProps(props)\n\n  const validChildren = getValidChildren(children)\n\n  const selector = \"& > *:not(style) ~ *:not(style)\"\n\n  const spacingStyle = spacing ? { [selector]: { mt: spacing } } : {}\n\n  return (\n    <ListStylesProvider value={styles}>\n      <chakra.ul\n        ref={ref}\n        listStyleType={styleType}\n        listStylePosition={stylePosition}\n        /**\n         * We added this role to fix the Safari accessibility issue with list-style-type: none\n         * @see https://www.scottohara.me/blog/2019/01/12/lists-and-safari.html\n         */\n        role=\"list\"\n        __css={{ ...styles.container, ...spacingStyle }}\n        {...rest}\n      >\n        {validChildren}\n      </chakra.ul>\n    </ListStylesProvider>\n  )\n})\n\nList.displayName = \"List\"\n\nexport const OrderedList = forwardRef<ListProps, \"ol\">((props, ref) => {\n  const { as, ...rest } = props\n  return (\n    <List ref={ref} as=\"ol\" styleType=\"decimal\" marginStart=\"1em\" {...rest} />\n  )\n})\n\nOrderedList.displayName = \"OrderedList\"\n\nexport const UnorderedList = forwardRef<ListProps, \"ul\">(function UnorderedList(\n  props,\n  ref,\n) {\n  const { as, ...rest } = props\n  return (\n    <List ref={ref} as=\"ul\" styleType=\"initial\" marginStart=\"1em\" {...rest} />\n  )\n})\n\nUnorderedList.displayName = \"UnorderedList\"\n\nexport interface ListItemProps extends HTMLChakraProps<\"li\"> {}\n\n/**\n * ListItem\n *\n * Used to render a list item\n */\nexport const ListItem = forwardRef<ListItemProps, \"li\">(function ListItem(\n  props,\n  ref,\n) {\n  const styles = useListStyles()\n\n  return <chakra.li ref={ref} {...props} __css={styles.item} />\n})\n\nListItem.displayName = \"ListItem\"\n\n/**\n * ListIcon\n *\n * Used to render an icon beside the list item text\n */\nexport const ListIcon = forwardRef<IconProps, \"svg\">(function ListIcon(\n  props,\n  ref,\n) {\n  const styles = useListStyles()\n\n  return <Icon ref={ref} role=\"presentation\" {...props} __css={styles.icon} />\n})\n\nListIcon.displayName = \"ListIcon\"\n","import {  useSelector, useDispatch } from \"react-redux\";\nimport {  Span, } from \"./ContactList.styled\";\nimport { getContacts, getFilter } from \"redux/contacts/selectors\";\n\n\nimport { Loader } from \"components/Loader/Loader\";\nimport { deleteContacts } from \"redux/contacts/operations\";\nimport {  Button, Icon, List,  ListItem } from \"@chakra-ui/react\";\nimport { PhoneIcon } from \"@chakra-ui/icons\";\n\n\n\n\n\nconst ContactList = () => {\n  const {  error, isLoading} = useSelector(state=>state.contacts.contacts);\n const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch()\n\n\n\nconst filtredContacts = contacts?.filter(contact =>\n  contact.name.toLowerCase().includes(filter.toLowerCase()))\n\n  \n  return (<>\n  {isLoading && <Loader></Loader>}\n    <List spacing={3}>\n      {filtredContacts.map(({id, name, phone}) => (\n        <ListItem key={id}>\n          <Icon as={PhoneIcon} boxSize={4} />\n          <Span>{name}: {phone}</Span>\n          <Button colorScheme='red' type=\"button\" onClick={()=>{dispatch(deleteContacts(id))}}>Delete</Button>\n        </ListItem>\n      ))}\n    </List>\n    {error && <p>{error}</p>}\n\n    </>\n  );\n};\n\nexport default ContactList;","\nimport { Container } from './Contacts.styled';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {  useEffect } from 'react';\nimport { getContacts } from 'redux/contacts/selectors';\nimport { Titles } from 'components/Title/Title';\nimport  ContactForm  from 'components/ContactForm/ContactForm';\nimport  Filter  from 'components/Filter/Filter';\nimport  ContactList  from 'components/ContactList/ContactList';\nimport { getAllContacts } from 'redux/contacts/operations';\n\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\nconst contacts = useSelector(getContacts)\n    console.log(contacts)\n    \nuseEffect(() => {\n   dispatch(getAllContacts());\n \n}, [dispatch]);\n\n  return (\n     \n    <Container>\n      <Titles>Phonebook</Titles>\n      <ContactForm />\n\n      <Titles>Contacts</Titles>\n      \n        <Filter  />\n     \n    <ContactList/>\n      \n    </Container>\n  );\n};","import {\n  chakra,\n  forwardRef,\n  SystemStyleObject,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport { useInputGroupStyles } from \"./input-group\"\n\nexport interface InputElementProps extends HTMLChakraProps<\"div\"> {\n  placement?: \"left\" | \"right\"\n}\n\nconst StyledInputElement = chakra(\"div\", {\n  baseStyle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    position: \"absolute\",\n    top: \"0\",\n    zIndex: 2,\n  },\n})\n\nconst InputElement = forwardRef<InputElementProps, \"div\">(function InputElement(\n  props,\n  ref,\n) {\n  const { placement = \"left\", ...rest } = props\n\n  const styles = useInputGroupStyles()\n  const input: any = styles.field\n\n  const attr = placement === \"left\" ? \"insetStart\" : \"insetEnd\"\n\n  const elementStyles: SystemStyleObject = {\n    [attr]: \"0\",\n    width: input?.height ?? input?.h,\n    height: input?.height ?? input?.h,\n    fontSize: input?.fontSize,\n    ...styles.element,\n  }\n\n  return <StyledInputElement ref={ref} __css={elementStyles} {...rest} />\n})\n\n// This is used in `input-group.tsx`\nInputElement.id = \"InputElement\"\n\nInputElement.displayName = \"InputElement\"\n\nexport type InputLeftElementProps = Omit<InputElementProps, \"placement\">\n\nexport const InputLeftElement = forwardRef<InputLeftElementProps, \"div\">(\n  function InputLeftElement(props, ref) {\n    const { className, ...rest } = props\n    const _className = cx(\"chakra-input__left-element\", className)\n\n    return (\n      <InputElement\n        ref={ref}\n        placement=\"left\"\n        className={_className}\n        {...rest}\n      />\n    )\n  },\n)\n\n// This is used in `input-group.tsx`\nInputLeftElement.id = \"InputLeftElement\"\n\nInputLeftElement.displayName = \"InputLeftElement\"\n\nexport type InputRightElementProps = Omit<InputElementProps, \"placement\">\n\nexport const InputRightElement = forwardRef<InputRightElementProps, \"div\">(\n  function InputRightElement(props, ref) {\n    const { className, ...rest } = props\n    const _className = cx(\"chakra-input__right-element\", className)\n\n    return (\n      <InputElement\n        ref={ref}\n        placement=\"right\"\n        className={_className}\n        {...rest}\n      />\n    )\n  },\n)\n\n// This is used in `input-group.tsx`\nInputRightElement.id = \"InputRightElement\"\n\nInputRightElement.displayName = \"InputRightElement\"\n","import { createContext } from \"@chakra-ui/react-context\"\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\"\nimport {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  omitThemingProps,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport { compact } from \"@chakra-ui/object-utils\"\nimport { cloneElement } from \"react\"\n\nconst [InputGroupStylesProvider, useInputGroupStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `InputGroupStylesContext`,\n  errorMessage: `useInputGroupStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<InputGroup />\" `,\n})\n\nexport { useInputGroupStyles }\n\nexport interface InputGroupProps\n  extends HTMLChakraProps<\"div\">,\n    ThemingProps<\"Input\"> {}\n\nexport const InputGroup = forwardRef<InputGroupProps, \"div\">(\n  function InputGroup(props, ref) {\n    const styles = useMultiStyleConfig(\"Input\", props)\n    const { children, className, ...rest } = omitThemingProps(props)\n\n    const _className = cx(\"chakra-input__group\", className)\n    const groupStyles: InputGroupProps = {}\n\n    const validChildren = getValidChildren(children)\n\n    const input: any = styles.field\n\n    validChildren.forEach((child: any) => {\n      if (!styles) return\n\n      if (input && child.type.id === \"InputLeftElement\") {\n        groupStyles.paddingStart = input.height ?? input.h\n      }\n\n      if (input && child.type.id === \"InputRightElement\") {\n        groupStyles.paddingEnd = input.height ?? input.h\n      }\n\n      if (child.type.id === \"InputRightAddon\") {\n        groupStyles.borderEndRadius = 0\n      }\n\n      if (child.type.id === \"InputLeftAddon\") {\n        groupStyles.borderStartRadius = 0\n      }\n    })\n\n    const clones = validChildren.map((child: any) => {\n      /**\n       * Make it possible to override the size and variant from `Input`\n       */\n\n      const theming = compact({\n        size: child.props?.size || props.size,\n        variant: child.props?.variant || props.variant,\n      })\n\n      return child.type.id !== \"Input\"\n        ? cloneElement(child, theming)\n        : cloneElement(child, Object.assign(theming, groupStyles, child.props))\n    })\n\n    return (\n      <chakra.div\n        className={_className}\n        ref={ref}\n        __css={{\n          width: \"100%\",\n          display: \"flex\",\n          position: \"relative\",\n          // Parts of inputs override z-index to ensure that they stack correctly on each other\n          // Create a new stacking context so that these overrides don't leak out and conflict with other z-indexes\n          isolation: \"isolate\",\n          ...styles.group,\n        }}\n        data-group\n        {...rest}\n      >\n        <InputGroupStylesProvider value={styles}>\n          {clones}\n        </InputGroupStylesProvider>\n      </chakra.div>\n    )\n  },\n)\n\nInputGroup.displayName = \"InputGroup\"\n","// src/compact.ts\nfunction compact(object) {\n  const clone = Object.assign({}, object);\n  for (let key in clone) {\n    if (clone[key] === void 0)\n      delete clone[key];\n  }\n  return clone;\n}\n\nexport {\n  compact\n};\n","// src/index.ts\nimport { Children, isValidElement } from \"react\";\nfunction getValidChildren(children) {\n  return Children.toArray(children).filter(\n    (child) => isValidElement(child)\n  );\n}\nexport {\n  getValidChildren\n};\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","getContacts","state","contacts","items","getFilter","filter","Title","Titles","_ref","children","_jsx","Conteiner","Label","_templateObject2","_templateObject3","_templateObject4","_templateObject5","InfoIcon","createIcon","d","PhoneIcon","displayName","viewBox","ArrowForwardIcon","dispatch","useDispatch","useSelector","_jsxs","onSubmit","event","preventDefault","form","target","name","value","number","contact","find","Notiflix","concat","createContacts","reset","InputGroup","InputLeftElement","pointerEvents","color","Input","mb","size","variant","placeholder","type","pattern","title","required","Button","colorScheme","rightIcon","Box","chakra","Square","forwardRef","props","ref","_props$centerContent","centerContent","rest","_objectWithoutProperties","_excluded","styles","display","alignItems","justifyContent","jsx","_objectSpread","boxSize","__css","flexShrink","flexGrow","_excluded2","borderRadius","_Fragment","length","mt","onChange","e","setFilter","Span","_createContext","createContext","errorMessage","_createContext2","_slicedToArray","ListStylesProvider","useListStyles","List","useMultiStyleConfig","_omitThemingProps","omitThemingProps","_omitThemingProps$sty","styleType","stylePosition","spacing","validChildren","getValidChildren","spacingStyle","_defineProperty","listStyleType","listStylePosition","role","container","as","marginStart","_excluded3","ListItem","item","Icon","icon","_useSelector","error","isLoading","filtredContacts","toLowerCase","includes","Loader","map","id","phone","onClick","deleteContacts","Contacts","console","log","useEffect","getAllContacts","ContactForm","Filter","ContactList","StyledInputElement","baseStyle","position","top","zIndex","InputElement","_objectSpread2","_a","_b","_props$placement","placement","useInputGroupStyles","input","field","attr","elementStyles","height","h","fontSize","element","className","_className","cx","InputRightElement","InputGroupStylesProvider","groupStyles","forEach","child","paddingStart","paddingEnd","borderEndRadius","borderStartRadius","clones","theming","object","clone","Object","assign","key","compact","cloneElement","width","isolation","group","Children","isValidElement"],"sourceRoot":""}