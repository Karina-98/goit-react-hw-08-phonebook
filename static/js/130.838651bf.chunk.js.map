{"version":3,"file":"static/js/130.838651bf.chunk.js","mappings":"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","sources":["pages/Contacts/Contacts.styled.jsx","redux/contacts/selectors.js","components/Title/Title.styled.jsx","components/Title/Title.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\nwidth: 400px;\npadding: 10px;\nmargin: 0 auto;\n`","\n\n\nexport const getContacts = state => state.contacts.contacts.items;\nexport const getFilter = state => state.filter.filter;\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\nfont-size: 1.5em;\ntext-align: center;\ncolor: palevioletred;\n`","import { Title } from \"./Title.styled\"\n\nexport const Titles = ({children}) => {\n    return <Title>{children}</Title>\n}","import styled from 'styled-components';\n\nexport const Conteiner = styled.div`\nwidth: 400px;\npadding: 10px;\nmargin: 0 auto;\n`\n\nexport const Form = styled.form`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nwidth: 300px;\npadding: 20px 30px;\npadding-bottom: 25px;\nborder-radius: 5px;\nmargin-bottom: 35px;\nbox-shadow: 0 15px 25px rgba(0, 0, 0, 0.6);\nborder-radius: 10px;\nbackground-color: white;\n\n`\n\nexport const Input = styled.input`\nbox-shadow: 0 0 5px rgba(0, 0, 0, 0.1);\nborder: 1px solid #ccc;\npadding: 10px;\n  font-size: 16px;\n  border-radius: 5px;\n  background-color: #f2f2f2;\n  margin-bottom:15px;\n  margin-left:10px;\n  color: #333;\n  &:focus {\n    border-bottom: 2px solid #4CAF50;}\n`\n\nexport const ButtonAdd = styled.button`\npadding: 10px 20px;\n  background-color: #4CAF50;\n  color: #fff;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n\n&:hover {\n  background-color: #45a049;}`","\nimport React from 'react';\nimport { ButtonAdd, Conteiner, Form, Input } from './ContactForm.styled';\nimport { getContacts } from 'redux/contacts/selectors';\nimport {  useSelector, useDispatch } from 'react-redux';\nimport Notiflix from 'notiflix';\nimport { createContacts } from 'redux/contacts/operations';\n\n\n\nconst ContactForm = () => {\n\nconst dispatch = useDispatch()\n  const contacts = useSelector(getContacts);\n\n  const handelSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n    const name = form.name.value;\n    const number = form.number.value;\n    const contact = { name: name, number:number };\n\n    if (contacts?.find(contact => contact.name === name)) {\n      Notiflix.Notify.failure(`${name} is already in your contacts`);\n\n      return;\n    } else {\n      dispatch(createContacts(contact))\n    }\n\n    event.target.reset();\n  };\n\n  return (\n    <Conteiner>\n      <Form onSubmit={handelSubmit}>\n        <label>\n          Name\n          <Input\n            placeholder=\"Please enter name\"\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n        <label>\n          Number\n          <Input\n            placeholder=\"Please enter number\"\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n        <ButtonAdd type=\"submit\">Add Contact</ButtonAdd>\n      </Form>\n    </Conteiner>\n  );\n};\n\nexport default ContactForm;","import styled from 'styled-components';\n\nexport const Input = styled.input`\nbox-shadow: 0 0 5px rgba(0, 0, 0, 0.1);\nborder: 1px solid #ccc;\npadding: 10px;\n  font-size: 16px;\n  border-radius: 5px;\n  background-color: #f2f2f2;\n  margin-bottom:15px;\n  margin-left:10px;\n  color: #333;\n  &:focus \n    border-bottom: 2px solid #4CAF50;\n`\n\nexport const Conteiner = styled.div`\nwidth: 400px;\npadding: 10px;\nmargin: 0 auto;\ndisplay: flex;\nflexdirection: column;\nalignItems: center;\n`\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { Conteiner, Input } from \"./Filter.styled\";\nimport { setFilter } from \"redux/contacts/filterSlice\";\nimport { getContacts } from \"redux/contacts/selectors\";\n\n\n\nconst Filter = () => {\n  const dispatch = useDispatch()\n  \n  const contacts = useSelector(getContacts)\n \n  const onChange = (e) => {\n  \n    dispatch(setFilter(e.target.value))\n  }\n\n\n  return (<>\n    {contacts.length > 0 ?\n     (\n      <Conteiner>\n      <p>Find contacts by name</p>\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Enter name\"\n        onChange={onChange}\n      />\n    </Conteiner>\n    ) : ( \n      <p>Please add your first contact</p>)\n     }\n    \n  \n    </>\n  );\n};\n\nexport default Filter;","import styled from 'styled-components';\n\nexport const List = styled.ul`\npadding: 0;\n  margin: 0;\n  list-style-type: none;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  \n`\n\nexport const ButtonDelete = styled.button`\npadding: 5px 10px;\n  background-color: red;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  margin-left: 15px;\n\n&:hover {\n  background-color: #45a049;}\n`\n\nexport const ContactItem = styled.li`\nmargin-top:20px;\n\n`","import {  useSelector, useDispatch } from \"react-redux\";\nimport { ButtonDelete, ContactItem, List } from \"./ContactList.styled\";\nimport { getContacts, getFilter } from \"redux/contacts/selectors\";\n\n\nimport { Loader } from \"components/Loader/Loader\";\nimport { deleteContacts } from \"redux/contacts/operations\";\n\n\n\n\n\nconst ContactList = () => {\n  const {  error, isLoading} = useSelector(state=>state.contacts.contacts);\n const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch()\n\n\n\nconst filtredContacts = contacts?.filter(contact =>\n  contact.name.toLowerCase().includes(filter.toLowerCase()))\n\n  \n  return (<>\n  {isLoading && <Loader></Loader>}\n    <List>\n      {filtredContacts.map(({id, name, phone}) => (\n        <ContactItem key={id}>\n          {name}: {phone}\n          <ButtonDelete type=\"button\" onClick={()=>{dispatch(deleteContacts(id))}}>Delete</ButtonDelete>\n        </ContactItem>\n      ))}\n    </List>\n    {error && <p>{error}</p>}\n\n    </>\n  );\n};\n\nexport default ContactList;","\nimport { Container } from './Contacts.styled';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {  useEffect } from 'react';\nimport { getContacts } from 'redux/contacts/selectors';\nimport { Titles } from 'components/Title/Title';\nimport  ContactForm  from 'components/ContactForm/ContactForm';\nimport  Filter  from 'components/Filter/Filter';\nimport  ContactList  from 'components/ContactList/ContactList';\nimport { getAllContacts } from 'redux/contacts/operations';\n\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\nconst contacts = useSelector(getContacts)\n    console.log(contacts)\n    \nuseEffect(() => {\n   dispatch(getAllContacts());\n \n}, [dispatch]);\n\n  return (\n     \n    <Container>\n      <Titles>Phonebook</Titles>\n      <ContactForm />\n\n      <Titles>Contacts</Titles>\n      \n        <Filter  />\n     \n    <ContactList/>\n      \n    </Container>\n  );\n};"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","getContacts","state","contacts","items","getFilter","filter","Title","Titles","_ref","children","_jsx","Conteiner","Form","_templateObject2","Input","_templateObject3","ButtonAdd","_templateObject4","dispatch","useDispatch","useSelector","_jsxs","onSubmit","event","preventDefault","form","target","name","value","number","contact","find","Notiflix","concat","createContacts","reset","placeholder","type","pattern","title","required","_Fragment","length","onChange","e","setFilter","List","ButtonDelete","ContactItem","_useSelector","error","isLoading","filtredContacts","toLowerCase","includes","Loader","map","id","phone","onClick","deleteContacts","Contacts","console","log","useEffect","getAllContacts","ContactForm","Filter","ContactList"],"sourceRoot":""}